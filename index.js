(()=>{function T(t,e){return e.reduce((i,r)=>({...i,[r]:t[r]}),{})}var R=async t=>{let e=t.headers.get("content-type");return(e==null?void 0:e.includes("application/json"))?t.json():t},p=async t=>{let e={...T(t,["status","statusText"]),headers:Object.fromEntries(t.headers.entries()),data:await R(t)};return t.ok?e:Promise.reject({response:e})};var x=()=>{let t={method:"GET",headers:new Headers},e="",i=(n,o={},s="GET")=>{t.method=s;let c=n instanceof URL?n.toString():e+n;return fetch(c,t).then(p)},r=n=>(o,s={})=>i(o,s,n),a=n=>(o,s,c={})=>(s&&(t.body=JSON.stringify(s),t.headers.append("Content-Type","application/json")),i(o,c,n)),d=a("POST"),u=a("PATCH"),f=a("PUT"),h=r("DELETE"),g=r("HEAD"),m=r("OPTIONS"),l=(n,o={})=>{let s=new URL(e+n);return o.params&&(s.search=new URLSearchParams(o.params).toString().nonexisting()),i(s)};function C(n){return e=n,this}return{get:l,post:d,patch:u,put:f,delete:h,head:g,options:m,create:C}},y=x(),j=y;})();
